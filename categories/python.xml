<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>A Reputable Journal (Python)</title><link>http://reputablejournal.com/</link><description></description><language>en</language><lastBuildDate>Fri, 18 Jul 2014 15:06:10 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>On the Denial of Service Attack</title><link>http://reputablejournal.com/posts/2014/07/on-the-denial-of-service-attack.html</link><dc:creator>Brad Miller</dc:creator><description>&lt;p&gt;Well its been an interesting week.  My daughter is married, and I've been caught in the crossfire of a Distributed Denial of Service (DDoS) attack on Webfaction, my hosting provider.  I'm quite sure the two are unrelated.&lt;/p&gt;
&lt;p&gt;For those of you who have been frustrated in your attempts to access any of the books on &lt;a class="reference external" href="http://interactivepython.org"&gt;interactivepython.org&lt;/a&gt;, I'm sorry.  We were not the target of the attack, but we were in the same subdomain and got blasted.  I can't believe that it took over four days to clear up the mess.  But thats about what happened.  This is a new one for me.  I've never considered that an open source textbook project would have to worry about something like this.  At one point Webfaction said they were getting 4Gbps (yes, 4 gigabits per second) of malicious traffic affecting about a dozen machines.&lt;/p&gt;
&lt;p&gt;I've been so frustrated with Webfaction's response that I've been thinking about moving to a different hosting service.  But I'm left with the following questions:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Could Webfaction done better?  The only thing I'm qualified to say here is that they could have done way better in communicating with those of us affected.  Here was the initial response I got from tech support:&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
There is no ETA as to when this issue will be fully resolved as only the attacker(s) can determine that. At times the target against a server can be large enough that our hardware mitigation system can not handle the volume. Please let us know if you need anything else.&lt;/blockquote&gt;
&lt;p&gt;Ok, maybe dealing with a DDoS &lt;strong&gt;is&lt;/strong&gt; a really hard problem, but as a frustrated owner of the site here is what I heard.  "Sorry, nothing we can do.  You will just have to wait until the bad guys get tired and go away."  In addition, it was maddeningly long between their status updates. You can see their &lt;a class="reference external" href="http://statusblog.webfaction.com/2014/07/13/ddos-attacks-on-multiple-servers/"&gt;updates here&lt;/a&gt;   As a site owner, all I want to do is get my site back up and running.  In order to make good decisions about what to do I need timely information, not vague intermittent messages.&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;What are standard practices in building web applications to protect against an attack like this?&lt;/li&gt;
&lt;li&gt;How do you know whether one hosting provider is going to be any better than another in dealing with an attack like this?  Is paying for AWS or Google compute engine the only way to know you are getting a provider with the resources to take on a big attack?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you have answers to these questions, please leave a comment.&lt;/p&gt;</description><category>Python</category><guid>http://reputablejournal.com/posts/2014/07/on-the-denial-of-service-attack.html</guid><pubDate>Fri, 18 Jul 2014 19:24:31 GMT</pubDate></item><item><title>PyCon 2014 Keynote Shout Out</title><link>http://reputablejournal.com/posts/2014/04/pycon-2014-keynote-shout-out.html</link><dc:creator>Brad Miller</dc:creator><description>&lt;p&gt;I am going to have to go to PyCon.  Not next year, as I'm going to be in Malta at the time, but hopefully in 2016.  I don't know how many people attend, but the number is big, and they have sold old every year for the past three years.&lt;/p&gt;
&lt;p&gt;I just got done watching one of the Keynote presentations online from PyCon 2014 held in Montreal April 9-17.  I'm linking to it below, because it goes right to the heart of most of my academic work.  But, it was especially exciting at the 20:05 mark.  Where she highlights &lt;a class="reference external" href="http://interactivepython.org"&gt;interactivepython.org&lt;/a&gt; and the &lt;a class="reference external" href="http://skulpt.org"&gt;Skulpt&lt;/a&gt; projects!&lt;/p&gt;
&lt;iframe width="425" height="344" src="//www.youtube.com/embed/4QOoAw6Su7M?rel=0&amp;amp;hd=1&amp;amp;wmode=transparent"&gt;&lt;/iframe&gt;</description><category>Python</category><guid>http://reputablejournal.com/posts/2014/04/pycon-2014-keynote-shout-out.html</guid><pubDate>Wed, 30 Apr 2014 14:20:59 GMT</pubDate></item><item><title>Moving to Nikola</title><link>http://reputablejournal.com/posts/2014/04/moving-to-nikola.html</link><dc:creator>Brad Miller</dc:creator><description>&lt;p&gt;When I moved this blog to Octopress in January, it was inspiring in many ways.  There were two things that slightly bugged me.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Octopress is entirely too ruby based.  Rake, and all of that made me feel bad, like I was cheating on Python.  Surely there must be a similar tool in the Python world I thought to myself.&lt;/li&gt;
&lt;li&gt;Octopress uses markdown.  I really like my restructuredText, and its just a bit irritating to have to think about the differences when I want to do a blog post.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Well, this weekend I found a couple of new static blog site generators that &lt;strong&gt;were&lt;/strong&gt; python based, and after playing around with Pelican, and &lt;a class="reference external" href="http://getnikola.com"&gt;Nikola&lt;/a&gt; I settled on the move to Nikola.  I really like the image galleries and slideshows that are built in, and I feel like I can jump in and start hacking if something develops that I really want to change.  Plus, having already hacked a bunch of restructuredText directives, I know I can extend my blogging tool to do all kinds of fun things.&lt;/p&gt;</description><category>Python</category><guid>http://reputablejournal.com/posts/2014/04/moving-to-nikola.html</guid><pubDate>Sun, 20 Apr 2014 17:38:39 GMT</pubDate></item><item><title>Easy Publishing with Runestone Interactive</title><link>http://reputablejournal.com/posts/2014/03/easy-publishing-with-runestone-interactive.html</link><dc:creator>Brad Miller</dc:creator><description>&lt;p&gt;During my January travels, I also converted this blog from tubmlr, which had been frustrating me for a while, to Octopress, with which I have been very happy.  Nothing like hacker level control of your own blog.  But more, than just the switch in tools, the move to Octopress inspired me to make it easier for people to publish small or large works using the Runestone tools.&lt;/p&gt;
&lt;p&gt;Yesterday, at the Learning @ Scale conference we demoed this new capability.  See &lt;a href="http://runestoneinteractive.org/LearningAtScal"&gt;the demo here&lt;/a&gt;.  To make it super easy to publish:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lecture slides&lt;/li&gt;
&lt;li&gt;Demonstrations&lt;/li&gt;
&lt;li&gt;A Tutorial&lt;/li&gt;
&lt;li&gt;Lab Instructions&lt;/li&gt;
&lt;li&gt;In class exercises&lt;/li&gt;
&lt;li&gt;A short module on your favorite topic not covered elsewhere&lt;/li&gt;
&lt;li&gt;An entire book&lt;/li&gt;
&lt;/ul&gt;
&lt;p class="more"&gt;&lt;a href="http://reputablejournal.com/posts/2014/03/easy-publishing-with-runestone-interactive.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;</description><category>Python</category><category>Runestone</category><guid>http://reputablejournal.com/posts/2014/03/easy-publishing-with-runestone-interactive.html</guid><pubDate>Wed, 05 Mar 2014 05:00:04 GMT</pubDate></item><item><title>Runestone Interactive Announces New Editions of Interactive Textbooks</title><link>http://reputablejournal.com/posts/2013/08/runestone-interactive-announces-new-editions-of-interactive-textbooks.html</link><dc:creator>Brad Miller</dc:creator><description>&lt;p&gt;Today I'm really pleased to announce that  have launched version 2.0 of our interactive computer science  textbooks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://interactivepython.org/runestone/static/thinkcspy/index.html"&gt;How to Think Like a Computer Scientist:  Interactive Edition 2.0&lt;/a&gt;  (CS 1)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://interactivepython.org/runestone/static/pythonds/index.html"&gt;Problem Solving with Algorithms and Data Structures using Python&lt;/a&gt;  (CS 2)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We first launched these books on our &lt;a href="http://interactivepython.org"&gt;interactivepython.org&lt;/a&gt; website in May of 2012, after around a year of private testing in the classroom.  Since then we have had 1.3 million page views by a quarter of a million unique visitors.  Daily, we get around 2,000 unique visitors.  Not bad for a site with zero dollars for an advertising budget.&lt;/p&gt;

&lt;h3&gt;What Makes these Books Unique?&lt;/h3&gt;

&lt;p&gt;These books are unique because they are interactive.  We have developed a set of authoring tools that make it really easy to write an interactive textbook with many interactive features.  We call these the Runestone tools.  Some of the interactive features that are possible include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Activecode&lt;/strong&gt;:  Using a &lt;a href="http://skulpt.org"&gt;Javascript implementation&lt;/a&gt; of Python you can run and modify the examples in the textbook right in the book.  No server connection is required since it is based on javascript and runs right in the browser.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Codelens&lt;/strong&gt;:  Using the amazing power of the &lt;a href="http://www.pythontutor.com"&gt;pythontutor.com&lt;/a&gt;  tools you can step through examples one line at a time, forward and backward.  While you are stepping through the code you can see variables and other data structures change values.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parsons Problems: &lt;/strong&gt; For beginning programmers Parson's problems are like refrigerator magnet poetry.  You can provide your students with the statements needed to write a program, but they must put the statements in the correct order.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inline Quizzes: &lt;/strong&gt;Each section of the book contains some inline quizzes that allow students to check their understanding of the material.  The quizzes have different feedback for each correct or incorrect answer that try to point students in the right direction. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Online Homework:&lt;/strong&gt;   At the end of each chapter are programming assignments.  In this new edition we have provided the answers to the odd numbered questions, and discussion forums for students to exchange ideas or ask questions about the homework problems.  As an instructor, you can grade your students programs on one convenient page.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Highlighting&lt;/strong&gt;  This is another much requested new feature.  Students can highlight text using the mouse and the highlights magically reappear on any supported browser.  In addition we will remember the students last location in the book and offer to return them to that position when they return.&lt;/li&gt;
&lt;li&gt;There are many other features but the best way to understand what we are doing is to actually have a look at our &lt;a href="http://interactivepython.org/runestone/static/overview/overview.html"&gt;overview page&lt;/a&gt;, which shows everything I have mentioned here and a lot more in action.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Over this past year we have discovered that we serve two different audiences with these books.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instructors looking for a textbook to use in their own course&lt;/li&gt;
&lt;li&gt;People who are interested in teaching themselves some computer science and have found our books through google search, the Python wiki, or some other word of mouth source.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Textbooks as a Service&lt;/h3&gt;

&lt;p&gt;When we launched the site last year we decided to not only provide the books free and open for anyone who wanted to read them, but also as a service for instructors who wanted to have their own custom copy of the book where they could track their students progress, review their answers to quizzes, and grade their students homework.   If you want to use our books in your class you are welcome to do so.  You have two options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You can use a copy of either book as is with the order of the chapters just as they are on the books linked to above.&lt;/li&gt;
&lt;li&gt;You can try our custom interface where you can mix and match chapters from both books to create your own custom textbook.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once you have created your own course then you will be able to see the assignments your students have completed right in the textbook.  I find this to be very valuable as an instructor.  For example if I have assigned the students to read and do the quizzes for a particular section, I can simply go to the quiz question and click on the 'Compare Me' button.  As an instructor I will see a summary of the answers my students gave, as well as the details of the answers that each student tried.&lt;/p&gt;

&lt;h3&gt;Supporting the Independent Learner&lt;/h3&gt;

&lt;p&gt;Perhaps the biggest surprise of this project is the number of people that have found one of the books through google, and are simply teaching themselves to program.  We are hopeful that some of the new features we have added will help foster a  community of learners so that people just learning to program can talk to others in the same situation.  Some things we hope are particularly helpful include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Answers to odd numbered questions&lt;/strong&gt;.  This was probably the number one request I got through email all last year.  How do I know if I did it right?  We decided to risk it and provide the answers, but only to the odd numbered problems.  In addition a student must try to answer the problem at least once before the answer becomes "unlocked"&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Discussion threads&lt;/strong&gt; for homework problems.  Again this may seem like a risky move where students can just publish their answer and others can copy.  But, what we are hoping for is that students will see that there are many ways to get to the "right answer"  There are different approaches and programming styles that can be used to solve the same problem.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compare Me&lt;/strong&gt;  Although we aren't sure about the title on the button, the idea is that after answering one of the quiz questions a learner can check on their overall 'grade' for all quiz questions, and see how their answer compared to all the other learners.  We haven't gone so far as to give out badges, but we think this is a nice intermediate approach.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;The Runestone Tools&lt;/h3&gt;

&lt;p&gt;The books above were built using our &lt;a href="http://runestoneinteractive.org"&gt;Runestone Interactive&lt;/a&gt; toolkit.  These tools are freely available on &lt;a href="http://github.com/bnmnetp/runestone"&gt;github&lt;/a&gt;.  If you want to write your own interactive book, or even just use the tools to create some interactive labs for your students you are welcome to do so.  You can write your materials in an easy to use markup language called restructuredText and add examples or quizzes using very simple tags.  Complete documentation for our extensions to restructuredText is provided on the website.  In addition to our own books, the team at Harvey Mudd College has published &lt;a href="http://www.cs.hmc.edu/csforall"&gt;CS for All&lt;/a&gt;  another introductory textbook using our tools.  I know of at least two other books in progress!  &lt;/p&gt;

&lt;p&gt;If you are interested in following our development or getting involved You can do so in several ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Twitter, follow &lt;a href="http://twitter.com/iRunestone"&gt;iRunestone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Facebook, &lt;a href="https://www.facebook.com/RunestoneInteractive"&gt;facebook.com/RunestoneInteractive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Google &lt;a href="https://groups.google.com/forum/#!forum/runestoneinteractive"&gt;Groups&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Acknowledgements&lt;/h3&gt;

&lt;p&gt;I am grateful to the many people who have provided us with feedback over the last year.  And I am especially grateful to the ACM SIGCSE social projects committee for providing me with a special projects grant that allowed me to work with a student (Isaac Dontje Lindell) this summer.  He did a ton of work and will be graduating next year.  You should hire him.  In addition this project relies on many open source components which I will mention and link to below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The original text for&lt;em&gt; How to Think Like a Computer Scientist&lt;/em&gt; comes from Allen Downey, Jeff Elkner and Chris Meyers.  We have modified it a lot, but without a starting point for us to experiment with our interactive ideas this project never would have taken off.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;Problem Solving with Algorithms and Data Structures&lt;/em&gt; text is published as a paper textbook by Franklin Beedle and Associates.  Without the forward thinking of Jim Leisy this book would be stuck.  Thankfully Jim freed us to use the text in an interactive form online.&lt;/li&gt;
&lt;li&gt;Mark Guzdial, Barbara Ericson and the rest of the &lt;a href="http://home.cc.gatech.edu/csl/CSLearning4U"&gt;CSLearning4U&lt;/a&gt; research group at Georgia Tech have provided questions, assessments,  and many other features and ideas.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;Activecode&lt;/strong&gt; examples are made possible by &lt;a href="http://skulpt.org"&gt;skulpt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;Codelens&lt;/strong&gt; examples are made possible by Philip Guo and his &lt;a href="http://www.pythontutor.com"&gt;pythontutor.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The look and feel of the book is based on the &lt;a href="http://getbootstrap.com/"&gt;bootstrap&lt;/a&gt; templates&lt;/li&gt;
&lt;li&gt;The system that builds the website from source is called &lt;a href="http://sphinx-doc.org"&gt;Sphinx&lt;/a&gt; and is really the backbone of the system that allows us to write our interactive extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vkaravir"&gt;Ville Karavirta&lt;/a&gt; wrote the original js-parsons library and Mike Hewner integrated it into the Runestone Tools.&lt;/li&gt;
&lt;/ul&gt;</description><category>Python</category><guid>http://reputablejournal.com/posts/2013/08/runestone-interactive-announces-new-editions-of-interactive-textbooks.html</guid><pubDate>Wed, 14 Aug 2013 00:00:00 GMT</pubDate></item><item><title>Making Python3 my default</title><link>http://reputablejournal.com/posts/2013/04/making-python3-my-default.html</link><dc:creator>Brad Miller</dc:creator><description>&lt;p&gt;I'm finally there.  After a long time of writing books using Python 3, and teaching in Python 3 on a daily basis, I'm finally at the point where I'm changing my work environment to use Python 3 by default.&lt;/p&gt;

&lt;p&gt;Here are the signs that convinced me it was time:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The release of Pillow to provide PIL functionality!&lt;/li&gt;
&lt;li&gt;Django 1.5&lt;/li&gt;
&lt;li&gt;IPython and IPython notebook are fully supported  -- I Love IPython Notebook&lt;/li&gt;
&lt;li&gt;matplotlib !!&lt;/li&gt;
&lt;li&gt;Sphinx, Jinja, SQLAlchemy, and many others are supported.  See: &lt;a href="https://python3wos.appspot.com/"&gt;https://python3wos.appspot.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a couple of projects that I use a lot that are not yet on Python3 (web2py) but I'm not going to let that stop me.&lt;/p&gt;

&lt;p&gt;It turns out to be pretty easy to get yourself up and running on all of this stuff with Python 3.  I'm on a Mac running 10.8.3.  The first and most important step is to get a working version of pip for Python3.  First you need to install distribute.&lt;/p&gt;

&lt;pre&gt;&lt;code class="plain plain" style="background-image: none !important; border: 0px !important; margin: 0px !important; padding: 0px !important; vertical-align: baseline !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; width: auto !important; box-sizing: content-box !important; font-size: 13px; direction: ltr !important; display: inline !important; color: black !important;"&gt;curl -O &lt;a style="background-image: none !important; border: 0px !important; margin: 0px !important; padding: 0px !important; vertical-align: baseline !important; color: black !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; width: auto !important; box-sizing: content-box !important; font-size: 1em !important; direction: ltr !important;" href="http://python-distribute.org/distribute_setup.py"&gt;http://python-distribute.org/distribute_setup.py&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class="plain plain" style="background-image: none !important; border: 0px !important; margin: 0px !important; padding: 0px !important; vertical-align: baseline !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; width: auto !important; box-sizing: content-box !important; font-size: 13px; direction: ltr !important; display: inline !important; color: black !important;"&gt;&lt;/code&gt;&lt;span style="font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace; font-size: 13px; line-height: 1.1em; background-color: white; text-align: left; white-space: pre;"&gt;sudo python3 distribute_setup.py&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;This will install easy_install in your Python home, but go one more step and install pip.&lt;/p&gt;

&lt;pre&gt;&lt;code class="plain plain" style="background-image: none !important; border: 0px !important; margin: 0px !important; padding: 0px !important; vertical-align: baseline !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; width: auto !important; box-sizing: content-box !important; font-size: 13px; direction: ltr !important; display: inline !important; color: black !important;"&gt;curl -O &lt;a style="background-image: none !important; border: 0px !important; margin: 0px !important; padding: 0px !important; vertical-align: baseline !important; color: black !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; width: auto !important; box-sizing: content-box !important; font-size: 1em !important; direction: ltr !important;" href="https://raw.github.com/pypa/pip/master/contrib/get-pip.py"&gt;https://raw.github.com/pypa/pip/master/contrib/get-pip.py&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class="plain plain" style="background-image: none !important; border: 0px !important; margin: 0px !important; padding: 0px !important; vertical-align: baseline !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; width: auto !important; box-sizing: content-box !important; font-size: 13px; direction: ltr !important; display: inline !important; color: black !important;"&gt;&lt;/code&gt;&lt;span style="font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace; font-size: 13px; line-height: 1.1em; background-color: white; text-align: left; white-space: pre;"&gt;sudo python3 get-pip.py&lt;/span&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;br&gt;&lt;br&gt;&lt;/pre&gt;

&lt;p&gt;This will create a pip in your /Library/Frameworks/Python.framework/Versions/3.3/bin  directory.&lt;/p&gt;

&lt;p&gt;From there you can begin pip installing pretty much everything you need!&lt;/p&gt;

&lt;p&gt;From my history today as I was setting everything up:&lt;/p&gt;

&lt;pre&gt;10393* pip3 install ipython&lt;br&gt;10409* pip3 install numpy&lt;br&gt;10410* pip3 install matplotlib&lt;br&gt;10429* pip3 install tornado&lt;br&gt;10430* pip3 install pyzmq&lt;/pre&gt;

&lt;pre&gt;10455  pip3 install Sphinx&lt;/pre&gt;

&lt;p&gt;If you are on a Mac you will need to use easy_install to install one thing, for IPython.  For some reason pip installing the readline library puts it too late in the load path to work with IPython, so you need to use easy_install-3.3 readline  to get the history in IPython working just right.&lt;/p&gt;

&lt;p&gt;Finally, you will want to add the Python 3 bin directory to your PATH.  Edit your .bashrc or .zshenv file.  Note that the following puts the Python 3 bin directory at the front of your PATH, making it the default when you type pip, python, or ipython.  If you need to revert back to python2.7 for some task you will need to be explicit about it.&lt;/p&gt;

&lt;pre&gt;export PATH=/Library/Frameworks/Python.framework/Versions/3.3/bin:$PATH&lt;/pre&gt;

&lt;p&gt;Easy!  You were expecting this to be a long and arduous process fraught with hacks and silly edits to config files.  Nope, just a few basic commands.  I take this as the final sign that Python 3 is here and ready to be your day to day Python.&lt;/p&gt;</description><category>Python</category><guid>http://reputablejournal.com/posts/2013/04/making-python3-my-default.html</guid><pubDate>Mon, 15 Apr 2013 00:00:00 GMT</pubDate></item><item><title>To Infinity and Beyond</title><link>http://reputablejournal.com/posts/2013/02/we-passed-3-million-entries-in-our-log-data-for-interactivepython-org-which-got-.html</link><dc:creator>Brad Miller</dc:creator><description>&lt;p&gt;&lt;img src="http://reputablejournal.com/images/31.media.tumblr.com/9c55cab1486b5c7bb35cf993249f6b4c/tumblr_midzqpGQSy1r729pmo1_1280.png"&gt;&lt;/p&gt;
&lt;p&gt;We passed 3 million entries in our log data for &lt;a href="http://interactivepython.org"&gt;InteractivePython.org&lt;/a&gt; which got me to wondering about how we are growing.  The site has been live for 275 days.  You can really see how the site took off after day 100, which makes sense because that was bout the time fall classes started around the country.  The tiny plateau between day 225 and 250 corresponds to Christmas/winter break for most schools, and now that Spring semester is in full swing it looks like the slope has gotten steeper again.&lt;/p&gt;

&lt;p&gt;The dotted line is the linear best fit line with a slope of 12,836.7.  Even if our log database is not growing exponentially thats an impressively steep slope.&lt;/p&gt;

&lt;p&gt;And just because this is all about Python and education, here's the Python code that created the graph.  I love matplotlib, it is such a powerful tool for quickly looking at your data.&lt;/p&gt;

&lt;pre&gt;
import matplotlib.pyplot as plt
from numpy import polyfit, arange

f = open('bydate','r')
days = f.readlines()
totals = [0]

for d in days:
    day,count = d.split('|')
    count = int(count)
    totals.append(totals[-1]+count)

x = arange(len(totals))
m,b = polyfit(x,totals,1)
print m
plt.plot(x,totals,x,m*x+b, '--k')
plt.ylim(ymin=0)
plt.show()
&lt;/pre&gt;

&lt;p&gt;The data file is simple. One day per line with the date in one column and the number of actions in the other column.  Here are the last few days:&lt;/p&gt;

&lt;pre&gt;
 2013-02-14 | 24349
 2013-02-15 | 17396
 2013-02-16 | 12645
&lt;/pre&gt;</description><category>Interactivepython</category><category>Python</category><category>Runestoneinteractive</category><guid>http://reputablejournal.com/posts/2013/02/we-passed-3-million-entries-in-our-log-data-for-interactivepython-org-which-got-.html</guid><pubDate>Sun, 17 Feb 2013 00:00:00 GMT</pubDate></item><item><title>Everyday Python - New Blog</title><link>http://reputablejournal.com/posts/2013/01/everyday-python-new-blog.html</link><dc:creator>Brad Miller</dc:creator><description>&lt;p&gt;I've decided that it will be best to keep my personal blog separate from the new Everyday Python blog project.  All of the infrastructure to make the posts interactive just work so much better when I have control of the server and everything else.  So  You can head over to &lt;a href="http://interactivepython.org/courselib/everyday"&gt;Everyday Python&lt;/a&gt; and click on the Everyday Python link there, or if you want to subscribe to the RSS feed for that project you can use &lt;a href="http://feeds.feedburner.com/everydaypython"&gt;this link&lt;/a&gt;.
&lt;/p&gt;</description><category>Python</category><guid>http://reputablejournal.com/posts/2013/01/everyday-python-new-blog.html</guid><pubDate>Sun, 13 Jan 2013 00:00:00 GMT</pubDate></item><item><title>Generating a password - part 1</title><link>http://reputablejournal.com/posts/2013/01/generating-a-password-part-1.html</link><dc:creator>Brad Miller</dc:creator><description>&lt;p&gt;OK, here is the first installment of the new Everyday Python series.  Today I'm just providing a link, as I still have some infrastructure work to get done in order to publish each installment both here and at Runestone Interactive.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://interactivepython.org/courselib/static/everyday/2013/01/2_password.html"&gt;Generating a password part 1&lt;/a&gt;&lt;/p&gt;</description><category>Python</category><guid>http://reputablejournal.com/posts/2013/01/generating-a-password-part-1.html</guid><pubDate>Thu, 03 Jan 2013 00:00:00 GMT</pubDate></item><item><title>Introducing Everyday Python</title><link>http://reputablejournal.com/posts/2013/01/introducing-everyday-python.html</link><dc:creator>Brad Miller</dc:creator><description>&lt;p&gt;&lt;/p&gt;&lt;div class="section" id="everyday-python"&gt;
&lt;h2&gt;Everyday Python&lt;a class="headerlink" href="http://reputablejournal.com/posts/2013/01/introducing-everyday-python.html#everyday-python" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is always risky to make your New Years resolutions public, but this is one I’ve
been thinking about for a while now, and so I’m going to go ahead and impose a
measure of accountability on myself by proclaiming this publicly.  This week, I’m
starting a series of educational blog posts here, and as a part of my &lt;a class="reference external" href="http://interactivepython.org"&gt;Runestone
Interactive&lt;/a&gt; publishing project.&lt;/p&gt;
&lt;p&gt;My idea is to publish a series of Python programming projects, aimed at solving
everyday problems, or puzzles. Hopefully these little projects will be interesting
and will give learners motivation to dig into the details of the solutions.  I
will provide links to the relevant Python programming constructs and data types in
either of the two interactive books (&lt;a class="reference external" href="http://interactivepython.org/courselib/static/thinkcspy/index.html"&gt;How to think like a computer scientist:
Interactive Edition&lt;/a&gt; , or
&lt;a class="reference external" href="http://interactivepython.org/courselib/static/pythonds/index.html"&gt;Problem Solving with Algorithms and Data Structures using Python&lt;/a&gt;) This will let me
focus on the problems, and not the minutia of the language.  Lets face it, reading
about all the different possible string methods is not that exciting, but seeing
them in action, and then wondering about what else you might be able to do with
strings is OK.&lt;/p&gt;
&lt;p&gt;The great thing about Python is that if you write things in a straightforward
manner its pretty easy to follow even if you don’t know all the details.  So, that
is my intention.  Write a solution and do it in straightforward Python that
beginners can understand.  Each project will appear over several days, and
will likely include some homework related to the project.  I’ll provide the solution
in a followup post.  In addition, I may refine the solution over the course of
several days introducing more and interesting solutions or more advanced features
of the Python language.&lt;/p&gt;
&lt;p&gt;In the back of my mind I am drawing inspiration from the old &lt;em&gt;Communications of the ACM&lt;/em&gt; column by John
Bently called &lt;em&gt;Programming Pearls&lt;/em&gt; In John’s columns he would feature a particular
problem or algorithm, and present it in a straight forward way, but then he would
refine that solution again and again polishing it until he had an incredibly
elegant solution.  It was beautiful because even a novice programmer could
understand what was going on at the start of the article, but would get sucked in
to the beautiful solution and would learn more than they thought possible.  While
advanced programmers might chuckle at the initial solutions, even they would have
to admit that they learned something by the end of each column.&lt;/p&gt;
&lt;p&gt;I already have a few ideas in mind for the first few projects.  I’m going to try
to start fairly easy with some string and list kind of projects, and work my way up
to more complex problems and algorithms, again this is meant to be educational so
that in theory a beginner might read through these posts more or less
chronologically, and learn some computer science along the way.&lt;/p&gt;
&lt;p&gt;Click the title to leave a comment.&lt;/p&gt;
&lt;/div&gt;</description><category>Python</category><guid>http://reputablejournal.com/posts/2013/01/introducing-everyday-python.html</guid><pubDate>Wed, 02 Jan 2013 00:00:00 GMT</pubDate></item></channel></rss>